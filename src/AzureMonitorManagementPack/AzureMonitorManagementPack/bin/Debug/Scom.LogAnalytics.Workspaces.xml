<?xml version="1.0" encoding="utf-8"?>
<ManagementPack SchemaVersion="2.0" ContentReadable="true" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Manifest>
    <Identity>
      <ID>Scom.LogAnalytics.Workspaces</ID>
      <Version>1.0.0.14</Version>
    </Identity>
    <Name>Scom.LogAnalytics.Workspaces</Name>
    <References>
      <Reference Alias="SC">
        <ID>Microsoft.SystemCenter.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Windows">
        <ID>Microsoft.Windows.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Health">
        <ID>System.Health.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="System">
        <ID>System.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
    </References>
  </Manifest>
  <TypeDefinitions>
    <EntityTypes>
      <ClassTypes>
        <ClassType ID="Scom.LogAnalytics.Workspaces.Class.Workspace" Base="Windows!Microsoft.Windows.ApplicationComponent" Accessibility="Public" Abstract="false" Hosted="true" Singleton="false">
          <Property ID="WorkspaceId" Key="true" Type="string" />
          <Property ID="AgentId" Key="false" Type="string" />
          <Property ID="AzureCloudType" Key="false" Type="string" />
        </ClassType>
      </ClassTypes>
      <RelationshipTypes>
        <RelationshipType ID="Scom.LogAnalytics.Workspaces.AgentHostsWorkspace" Accessibility="Public" Abstract="false" Base="System!System.Hosting">
          <Source ID="Source" Type="SC!Microsoft.SystemCenter.Agent" />
          <Target ID="Target" Type="Scom.LogAnalytics.Workspaces.Class.Workspace" />
        </RelationshipType>
      </RelationshipTypes>
    </EntityTypes>
    <ModuleTypes>
      <DataSourceModuleType ID="Scom.LogAnalytics.Workspaces.TimedPowerShell.PropertyBagProvider" Accessibility="Public" Batching="false">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="ScriptName" type="NonNullString" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="ScriptBody" type="NonNullString" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="SnapIns" type="SnapInsType" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="Parameters" type="NamedParametersType" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="0" maxOccurs="1" name="StrictErrorHandling" type="xsd:boolean" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="DS1" TypeID="System!System.SimpleScheduler">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
              </DataSource>
              <ProbeAction ID="PSScript" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagProbe">
                <ScriptName>$Config/ScriptName$</ScriptName>
                <ScriptBody>$Config/ScriptBody$</ScriptBody>
                <SnapIns>$Config/SnapIns$</SnapIns>
                <Parameters>$Config/Parameters$</Parameters>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
                <StrictErrorHandling>$Config/StrictErrorHandling$</StrictErrorHandling>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="PSScript">
                <Node ID="DS1" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="Scom.LogAnalytics.Workspaces.DataSource.ConnectionStatus" Accessibility="Public" Batching="false">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="WorkspaceId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="Script" TypeID="Scom.LogAnalytics.Workspaces.TimedPowerShell.PropertyBagProvider">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
                <ScriptName>ScomLogAnalyticsWorkspacesConnectionStatus.ps1</ScriptName>
                <ScriptBody>
                  
                    Param()
                    $StartTime = Get-Date
                    $ScriptName = 'ScomLogAnalyticsWorkspacesConnectionStatus.ps1'
                    $EventID = '1217'
                    try{
                    $Agent = New-Object -ComObject AgentConfigManager.MgmtSvcCfg -ErrorAction Stop
                    $momapi = New-Object -comObject MOM.ScriptAPI -ErrorAction Stop
                    $momapi.LogScriptEvent($ScriptName,$EventID,0,"`nLoaded com objects successfully. `nRunning as $(whoami).")

                    }

                    catch{

                    $momapi.LogScriptEvent($ScriptName,$EventID,1,"`n FATAL ERROR: Unable to load OperationsManager module. `n Terminating script. `n Error is: $($_.Exception.Message).")

                    }

                    Foreach ($Workspace in $Agent.GetCloudWorkspaces()) {
                    $momapi.LogScriptEvent($ScriptName,$EventID,0,"WorkspaceID=$($Workspace.workspaceId)`nConnectionStatus=$($Workspace.ConnectionStatus)`nConnectionStatusText=$($Workspace.ConnectionStatusText)")
                    $Bag = $momapi.CreatePropertyBag()
                    $Bag.AddValue('WorkspaceId',$Workspace.workspaceId)
                    $Bag.AddValue('ConnectionStatus',$Workspace.ConnectionStatus)
                    $Bag.AddValue('ConnectionStatusText',$Workspace.ConnectionStatusText)
                    $Bag

                    }
                    
                </ScriptBody>
                <SnapIns />
                <Parameters />
                <TimeoutSeconds>30</TimeoutSeconds>
              </DataSource>
              <ConditionDetection ID="FilterWorkspaceId" TypeID="System!System.ExpressionFilter">
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">Property[@Name='WorkspaceId']</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="String">$Config/WorkspaceId$</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
              </ConditionDetection>
            </MemberModules>
            <Composition>
              <Node ID="FilterWorkspaceId">
                <Node ID="Script" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="Scom.LogAnalytics.Workspaces.DataSource.WorkspaceDiscovery" Accessibility="Public" Batching="false">
        <Configuration>
          <xsd:element name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TimeoutSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedPowerShell.DiscoveryProvider">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
                <ScriptName>ScomLogAnalyticsWorkspacesDiscovery.ps1</ScriptName>
                <ScriptBody>
                    
                  Param(
                    $SourceId,
                    $ManagedEntityId,
                    $ComputerName
                  )
                  
                  $StartTime = Get-Date
                  $ScriptName = 'ScomLogAnalyticsWorkspacesDiscovery.ps1'
                  $EventID = '1216'
                  
                  try{

                    $Agent = New-Object -ComObject AgentConfigManager.MgmtSvcCfg -ErrorAction Stop
                    $momapi = New-Object -comObject MOM.ScriptAPI -ErrorAction Stop
                    $momapi.LogScriptEvent($ScriptName,$EventID,0,"`nLoaded com objects successfully. `nRunning as ($whoami).")

                  }

                  catch{

                  $momapi.LogScriptEvent($ScriptName,$EventID,1,"`n FATAL ERROR: Unable to load OperationsManager module. `n Terminating script. `n Error is: $($_.Exception.Message).")

                  }

                  $DiscoveryData = $momapi.CreateDiscoveryData(0,$SourceId,$ManagedEntityId)
                  $WorkspaceNumber=0  
                  Foreach ($Workspace in $Agent.GetCloudWorkspaces()) {
                    ++$WorkspaceNumber
                    $WorkspaceDisplayName = "WS$WorkspaceNumber"
                    $instance = $DiscoveryData.CreateClassInstance("$MPElement[Name='Scom.LogAnalytics.Workspaces.Class.Workspace']$")
                    $instance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", $ComputerName)
                    $instance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $WorkspaceDisplayName)
                    $instance.AddProperty("$MPElement[Name='Scom.LogAnalytics.Workspaces.Class.Workspace']/WorkspaceId$", $Workspace.workspaceId)
                    $instance.AddProperty("$MPElement[Name='Scom.LogAnalytics.Workspaces.Class.Workspace']/AgentId$",$Workspace.AgentId)
                    $instance.AddProperty("$MPElement[Name='Scom.LogAnalytics.Workspaces.Class.Workspace']/AzureCloudType$", $Workspace.AzureCloudType)
                    $DiscoveryData.AddInstance($instance)
                  
                  }
                  $DiscoveryData
                </ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>SourceId</Name>
                    <Value>$MPElement$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>ManagedEntityId</Name>
                    <Value>$Target/Id$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>ComputerName</Name>
                    <Value>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              </DataSource>
            </MemberModules>
            <Composition>
              <Node ID="DS" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.Discovery.Data</OutputType>
      </DataSourceModuleType>
    </ModuleTypes>
    <MonitorTypes>
      <UnitMonitorType ID="Scom.LogAnalytics.Workspaces.MonitorType.ConnectionStatus" Accessibility="Internal">
        <MonitorTypeStates>
          <MonitorTypeState ID="ErrorState" NoDetection="false" />
          <MonitorTypeState ID="HealthyState" NoDetection="false" />
        </MonitorTypeStates>
        <Configuration>
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="WorkspaceId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS" TypeID="Scom.LogAnalytics.Workspaces.DataSource.ConnectionStatus">
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <WorkspaceId>$Config/WorkspaceId$</WorkspaceId>
            </DataSource>
            <ConditionDetection ID="FilterSuccess" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Integer">Property[@Name='ConnectionStatus']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="Integer">0</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="FilterError" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Integer">Property[@Name='ConnectionStatus']</XPathQuery>
                  </ValueExpression>
                  <Operator>NotEqual</Operator>
                  <ValueExpression>
                    <Value Type="Integer">0</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="ErrorState">
              <Node ID="FilterError">
                <Node ID="DS" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="HealthyState">
              <Node ID="FilterSuccess">
                <Node ID="DS" />
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
    </MonitorTypes>
  </TypeDefinitions>
  <Monitoring>
    <Discoveries>
      <Discovery ID="Scom.LogAnalytics.Workspaces.Discovery.Workspace" Target="SC!Microsoft.SystemCenter.Agent" Enabled="true" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <!-- We choose Microsoft.Windows.Server.OperatingSystem as the preferred target class to ensure this will run on all Windows Servers, but will not create duplicates on clusters -->
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="Scom.LogAnalytics.Workspaces.Class.Workspace"></DiscoveryClass>
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Scom.LogAnalytics.Workspaces.DataSource.WorkspaceDiscovery">
          <IntervalSeconds>86333</IntervalSeconds>
          <SyncTime></SyncTime>
          <TimeoutSeconds>120</TimeoutSeconds>
        </DataSource>
      </Discovery>
    </Discoveries>
    <Monitors>
      <UnitMonitor ID="Scom.LogAnalytics.Workspaces.Monitor.ConnectionStatus" Accessibility="Public" Enabled="true" Target="Scom.LogAnalytics.Workspaces.Class.Workspace" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Scom.LogAnalytics.Workspaces.MonitorType.ConnectionStatus" ConfirmDelivery="true">
        <Category>Custom</Category>
        <AlertSettings AlertMessage="Scom.LogAnalytics.Workspaces.Monitor.ConnectionStatus_AlertMessageResourceID">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>Error</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Target/Property[Type="Scom.LogAnalytics.Workspaces.Class.Workspace"]/WorkspaceId$</AlertParameter1>
            <AlertParameter2>$Data/Context/DataItem/Property[@Name='ConnectionStatusText']$</AlertParameter2>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="NotConnected" MonitorTypeStateID="ErrorState" HealthState="Error" />
          <OperationalState ID="Connected" MonitorTypeStateID="HealthyState" HealthState="Success" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>600</IntervalSeconds>
          <SyncTime />
          <WorkspaceId>$Target/Property[Type="Scom.LogAnalytics.Workspaces.Class.Workspace"]/WorkspaceId$</WorkspaceId>
        </Configuration>
      </UnitMonitor>
    </Monitors>
  </Monitoring>
  <Presentation>
    <StringResources>
      <StringResource ID="Scom.LogAnalytics.Workspaces.Monitor.ConnectionStatus_AlertMessageResourceID" />
    </StringResources>
  </Presentation>
  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="true">
      <DisplayStrings>
        <DisplayString ElementID="Scom.LogAnalytics.Workspaces">
          <Name>LogAnalytics Workspaces Monitoring</Name>
          <Description>LogAnalytics Workspaces Monitoring</Description>
        </DisplayString>
        <DisplayString ElementID="Scom.LogAnalytics.Workspaces.DataSource.ConnectionStatus">
          <Name>Connection Status DataSource (PowerShell)</Name>
        </DisplayString>
        <DisplayString ElementID="Scom.LogAnalytics.Workspaces.Monitor.ConnectionStatus">
          <Name>Connection Status</Name>
        </DisplayString>
        <DisplayString ElementID="Scom.LogAnalytics.Workspaces.Monitor.ConnectionStatus" SubElementID="NotConnected">
          <Name>NotConnected</Name>
        </DisplayString>
        <DisplayString ElementID="Scom.LogAnalytics.Workspaces.Monitor.ConnectionStatus" SubElementID="Connected">
          <Name>Connected</Name>
        </DisplayString>
        <DisplayString ElementID="Scom.LogAnalytics.Workspaces.MonitorType.ConnectionStatus">
          <Name>Connection Status Monitor Type (PowerShell)</Name>
        </DisplayString>
        <DisplayString ElementID="Scom.LogAnalytics.Workspaces.Monitor.ConnectionStatus_AlertMessageResourceID">
          <Name>Could not connect to Log Analytics Workspace</Name>
          <Description>
            Could not connect to the following workspace.
            WorkspaceID: {0}
            StatusText: {1}
        </Description>
        </DisplayString>
        <DisplayString ElementID="Scom.LogAnalytics.Workspaces.Class.Workspace">
          <Name>Log Analytics Workspace</Name>
          <Description>Workspace Instances hosted by Log Analytics (SCOM) Agent</Description>
        </DisplayString>
        <DisplayString ElementID="Scom.LogAnalytics.Workspaces.Class.Workspace" SubElementID="WorkspaceId">
          <Name>WorkspaceId</Name>
          <Description>WorkspaceId</Description>
        </DisplayString>
        <DisplayString ElementID="Scom.LogAnalytics.Workspaces.Class.Workspace" SubElementID="AgentId">
          <Name>AgentId</Name>
          <Description>AgentId that connects to the workspace</Description>
        </DisplayString>
        <DisplayString ElementID="Scom.LogAnalytics.Workspaces.Class.Workspace" SubElementID="AzureCloudType">
          <Name>AzureCloudType</Name>
          <Description>AzureCloudType of the workspace</Description>
        </DisplayString>
        <DisplayString ElementID="Scom.LogAnalytics.Workspaces.DataSource.WorkspaceDiscovery">
          <Name>Workspace Powershell DataSource</Name>
          <Description>Workspace Powershell DataSource</Description>
        </DisplayString>
        <DisplayString ElementID="Scom.LogAnalytics.Workspaces.Discovery.Workspace">
          <Name>Workspace Discovery</Name>
          <Description>Discovery for Worksapce Instances</Description>
        </DisplayString>
      </DisplayStrings>
      <KnowledgeArticles></KnowledgeArticles>
    </LanguagePack>
  </LanguagePacks>
</ManagementPack>